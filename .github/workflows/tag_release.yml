name: Tag And Release
concurrency:
  group: tag-release
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PRE_RELEASE_MODE: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Create Version
        id: version
        uses: paulhatch/semantic-version@v5.0.2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR-RELEASE)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR-RELEASE)"
          # A string to determine the format of the version output
          version_format: "v${major}.${minor}.${patch}-prerelease${increment}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false
          # Prevents pre-v1.0.0 version from automatically incrementing the major version.
          # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
          enable_prerelease_mode: $PRE_RELEASE_MODE
      - name: Tag and Release
        uses: avakar/tag-and-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          prerelease: $PRE_RELEASE_MODE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

